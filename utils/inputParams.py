input_params = {
    "seller_type": {
        "prompt": "Seller type [private, dealer, any]: ",
        "valid_inputs": ["private", "dealer", "any", ""],
    },
    "fuel_type": {
        "prompt": "Fuel type [diesel, petrol, electric, hybrid, any]: ",
        "valid_inputs": ["diesel", "petrol", "electric", "hybrid", "any", ""],
    },
    "transmission": {
        "prompt": "Transmission [manual, automatic, any]: ",
        "valid_inputs": ["manual", "automatic", "any", ""],
    },
    "body_type": {
        "prompt": "Body type [convertible, coupe, saloon, hatchback, estate, mpv, suv, van, pick up, any]: ",
        "valid_inputs": [
            "convertible",
            "coupe",
            "saloon",
            "hatchback",
            "estate",
            "mpv",
            "suv",
            "van",
            "pick up",
            "any",
            "",
        ],
    },
    "numDoors": {
        "prompt": "Number of doors [2, 3, 4, 5, 6, any]: ",
        "valid_inputs": [str(num) for num in range(2, 7)] + ["any", ""],
    },
    "colour": {
        "prompt": "Colour [grey, black, blue, white, red, green, orange, brown, yellow, purple, silver, beige, gold, other, any]: ",
        "valid_inputs": [
            "grey",
            "black",
            "blue",
            "white",
            "red",
            "green",
            "orange",
            "brown",
            "yellow",
            "purple",
            "silver",
            "beige",
            "gold",
            "other",
            "any",
            "",
        ],
    },
    "verifications": {
        "prompt": "Verifications [manufacturer approved, greenlight verified, trusted dealer, any]: ",
        "valid_inputs": [
            "manufacturer approved",
            "greenlight verified",
            "trusted dealer",
            "any",
            "",
        ],
    },
    "make": {
        "prompt": "Make of Vehicle: ",
        "valid_inputs": [
            "any",
            "ac",
            "aro",
            "abarth",
            "alfa romeo",
            "aston martin",
            "audi",
            "austin",
            "bmw",
            "byd",
            "bentley",
            "chevrolet",
            "chrysler",
            "citroen",
            "cupra",
            "dfsk",
            "ds automobiles",
            "dacia",
            "daihatsu",
            "daimler",
            "dodge",
            "ferrari",
            "fiat",
            "ford",
            "honda",
            "hummer",
            "hyundai",
            "infiniti",
            "isuzu",
            "jaguar",
            "jeep",
            "kia",
            "levc",
            "lamborghini",
            "lancia",
            "land rover",
            "lexus",
            "lotus",
            "maxus",
            "mg",
            "maserati",
            "mazda",
            "mercedes-benz",
            "mini",
            "mitsubishi",
            "morgan",
            "morris",
            "nissan",
            "nissan president",
            "opel",
            "ora",
            "perodua",
            "peugeot",
            "polestar",
            "porsche",
            "reliant",
            "renault",
            "rolls royce",
            "rover",
            "seat",
            "saab",
            "skoda",
            "smart",
            "ssangyong",
            "subaru",
            "suzuki",
            "tesla",
            "toyota",
            "triumph",
            "vauxhall",
            "volkswagen",
            "volvo",
            "other",
            "",
        ],
    },
    "model": {"prompt": "Model of Vehicle: ", "valid_inputs": ["any", ""]},
    "min_year": {
        "prompt": "Minimum year of manufacture [1980-2024]: ",
        "valid_inputs": [str(year) for year in range(1980, 2025)] + ["any", ""],
    },
    "max_year": {
        "prompt": "Maximum year of manufacture [1980-2024]: ",
        "valid_inputs": [str(year) for year in range(1980, 2025)] + ["any", ""],
    },
    "min_price": {
        "prompt": "Minimum price (€) [0-70,000]: ",
        "valid_inputs": [str(price) for price in range(0, 71_000, 1_000)] + ["any", ""],
    },
    "max_price": {
        "prompt": "Maximum price (€) [0-70,000]: ",
        "valid_inputs": [str(price) for price in range(0, 71_000, 1_000)] + ["any", ""],
    },
    "min_mileage": {
        "prompt": "Minimum mileage (km) [0-400,000]: ",
        "valid_inputs": [str(mileage) for mileage in range(0, 410_000, 10_000)]
                        + ["any", ""],
    },
    "max_mileage": {
        "prompt": "Maximum mileage (km) [0-400,000]: ",
        "valid_inputs": [str(mileage) for mileage in range(0, 410_000, 10_000)]
                        + ["any", ""],
    },
    "min_engine_size": {
        "prompt": "Minimum engine size (cc) [1,000-7,000]: ",
        "valid_inputs": [str(size) for size in range(1_000, 7_500, 500)] + ["any", ""],
    },
    "max_engine_size": {
        "prompt": "Maximum engine size (cc) [1,000-7,000]: ",
        "valid_inputs": [str(size) for size in range(1_000, 7_500, 500)] + ["any", ""],
    },
    "min_engine_power": {
        "prompt": "Minimum engine power (hp) [50-500]: ",
        "valid_inputs": [str(power) for power in range(50, 550, 50)] + ["any", ""],
    },
    "max_engine_power": {
        "prompt": "Maximum engine power (hp) [50-500]: ",
        "valid_inputs": [str(power) for power in range(50, 550, 50)] + ["any", ""],
    },
    "min_seats": {
        "prompt": "Minimum number of seats [2-8]: ",
        "valid_inputs": [str(seats) for seats in range(2, 9)] + ["any", ""],
    },
    "max_seats": {
        "prompt": "Maximum number of seats [2-8]: ",
        "valid_inputs": [str(seats) for seats in range(2, 9)] + ["any", ""],
    },
    "max_road_tax": {
        "prompt": "Maximum road tax (€) [0-1,000]: ",
        "valid_inputs": ["150", "200", "300", "400", "500", "1000", "1000+", "any", ""],
    },
    "min_valid_nct": {
        "prompt": "Minimum valid NCT (months) [3, 6, 9, 12, 18]: ",
        "valid_inputs": ["3", "6", "9", "12", "18", "any", ""],
    },
    "max_prev_owners": {
        "prompt": "Maximum previous owners [0-5]: ",
        "valid_inputs": [str(num) for num in range(0, 6)] + ["any", ""],
    },
}
